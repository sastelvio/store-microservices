spring.application.name=api-gateway

#EUREKA DISCOVERY
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=localhost
#EUREKA UNDERSTAND THAT THE PORTS ARE DEFINED DYNAMICALLY
eureka.instance.non-secure-port-enabled=true
#eureka.instance.instance-id=${eureka.instance.ip-address}:${spring.application.name}:${random.uuid}

#LOG (DEFINE AND IDENTIFY THE ROUTES)
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

#ROUTES (lb allow client side load balancing)
#product service route
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/product/(?<segment>.*), /${segment}

#order service route
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/order/(?<segment>.*), /${segment}

#discovery server route
spring.cloud.gateway.routes[2].id=discovery-server
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

#discovery server static resources route
spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**

#product service prometheus
spring.cloud.gateway.routes[4].id=product-service-actuator
spring.cloud.gateway.routes[4].uri=lb://product-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/product/actuator/**

#order service prometheus
spring.cloud.gateway.routes[5].id=order-service-actuator
spring.cloud.gateway.routes[5].uri=lb://order-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/order/actuator/**

#order service prometheus
spring.cloud.gateway.routes[6].id=notification-service-actuator
spring.cloud.gateway.routes[6].uri=lb://notification-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/notification/actuator/**


#KEYCLOAK
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-boot-microservices-realm


#DISTRIBUTED TRACING: MICROMETER & ZIPKIN
management.tracing.sampling.probability=1.0

#MONITORING AND ALERTING: PROMETHEUS & GRAFANA
management.endpoints.web.exposure.include=prometheus
management.endpoint.health.show.details=always
management.endpoint.prometheus.enabled=true


