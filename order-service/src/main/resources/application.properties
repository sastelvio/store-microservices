spring.application.name=order-service

#DATASOURCE
spring.datasource.drive-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=1111
spring.jpa.show=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

logging.level.org.springframework.security=DEBUG

#DEFINE THE PORT WHERE THE MICRO SERVICE WILL RUN
server.port=8081

#EUREKA DISCOVERY
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka
spring.cloud.loadbalancer.ribbon.enabled=false
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=localhost
#EUREKA UNDERSTAND THAT THE PORTS ARE DEFINED DYNAMICALLY
eureka.instance.non-secure-port-enabled=true
eureka.instance.instance-id=${eureka.instance.ip-address}:${spring.application.name}:${random.uuid}


#SPRING CLOUD: CIRCUIT BREAKER
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=ALWAYS
management.security.enabled=false

#CIRCUIT BREAKER: RESILIENCE4J
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#timeout
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#retry
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=30s

#DISTRIBUTED TRACING: MICROMETER & ZIPKIN
management.tracing.sampling.probability=1.0


#EVENT DRIVEN ARCHITECTURE: KAFKA
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.sastelvio.order_service.event.OrderPlacedEvent

#MONITORING AND ALERTING: PROMETHEUS & GRAFANA
management.endpoint.prometheus.enabled=true
